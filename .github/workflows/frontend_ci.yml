name: master frontend CI

env:
  NODE_OPTIONS: --max-old-space-size=6144
  NODE_VERSION: '20.2.x'

on: 
    workflow_call:
      inputs:
       infra_repository:
        description: "Path to infrastructure repository"
        required: true
        type: string
       run_e2e:
        description: "Boolean to run e2e test job"
        required: false
        default: false
        type: boolean
       run_tag:
        description: "Boolean to run tag job"
        required: false
        default: true
        type: boolean
       registry_username:
          type: string
          required: true
       os_registry_username:
          type: string
          required: true
      secrets:
        registry_token:
          required: true
        os_registry_token:
          required: true

jobs:
  e2e:
    name: E2E testing
    runs-on: ubuntu-latest
    if: ${{ inputs.run_e2e }} == true
    steps:
     - id: e2e
       run: |
        echo "E2E is runnning !"

  tag:
    runs-on: ubuntu-latest
    name: Tag
    outputs:
      newtag: ${{ steps.tag-current.outputs.newtag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get future tag
        id: future-tag
        uses: epfl-si/autotag-action@1.0
        with:
          doit: false

      - name: Tag
        if: steps.future-tag.outputs.newtag != 'none'
        id: tag-current
        uses: epfl-si/autotag-action@1.0
        with:
          doit: true
          branch: $BRANCH_NAME
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

      - name: Push
        if: steps.future-tag.outputs.newtag != 'none'
        run: |
          git push origin $BRANCH_NAME
        env:
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

  deploy-development:
    name: Deploy to development
    runs-on: ubuntu-latest
    #needs: [ e2e ]
    #runs-on: self-hosted
    environment: development

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        if: steps.tag-current.outputs.newtag != 'none'
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        if: steps.tag-current.outputs.newtag != 'none'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and tag
        if: steps.tag-current.outputs.newtag != 'none'
        run: |
          docker build -t ${{ github.event.repository.name }} .
          docker image tag ${{ github.event.repository.name }}:latest ghcr.io/${{ github.repository }}:develop

      - name: Push to GHCR
        if: steps.tag-current.outputs.newtag != 'none'
        run: |
          docker push ghcr.io/${{ github.repository }}:develop

      - name: Log in to the Openshift registry
        uses: docker/login-action@v2
        with:
          registry: os-docker-registry.epfl.ch
          username: ${{ inputs.os_registry_username }}
          password: ${{ secrets.os_registry_token }}

          

    